//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SupportCase) DeepCopyInto(out *SupportCase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SupportCase.
func (in *SupportCase) DeepCopy() *SupportCase {
	if in == nil {
		return nil
	}
	out := new(SupportCase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SupportCase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SupportCaseInitParameters) DeepCopyInto(out *SupportCaseInitParameters) {
	*out = *in
	if in.CategoryCode != nil {
		in, out := &in.CategoryCode, &out.CategoryCode
		*out = new(string)
		**out = **in
	}
	if in.CcEmailAddresses != nil {
		in, out := &in.CcEmailAddresses, &out.CcEmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CommunicationBody != nil {
		in, out := &in.CommunicationBody, &out.CommunicationBody
		*out = new(string)
		**out = **in
	}
	if in.IssueType != nil {
		in, out := &in.IssueType, &out.IssueType
		*out = new(string)
		**out = **in
	}
	if in.Language != nil {
		in, out := &in.Language, &out.Language
		*out = new(string)
		**out = **in
	}
	if in.ServiceCode != nil {
		in, out := &in.ServiceCode, &out.ServiceCode
		*out = new(string)
		**out = **in
	}
	if in.SeverityCode != nil {
		in, out := &in.SeverityCode, &out.SeverityCode
		*out = new(string)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SupportCaseInitParameters.
func (in *SupportCaseInitParameters) DeepCopy() *SupportCaseInitParameters {
	if in == nil {
		return nil
	}
	out := new(SupportCaseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SupportCaseList) DeepCopyInto(out *SupportCaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SupportCase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SupportCaseList.
func (in *SupportCaseList) DeepCopy() *SupportCaseList {
	if in == nil {
		return nil
	}
	out := new(SupportCaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SupportCaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SupportCaseObservation) DeepCopyInto(out *SupportCaseObservation) {
	*out = *in
	if in.CaseID != nil {
		in, out := &in.CaseID, &out.CaseID
		*out = new(string)
		**out = **in
	}
	if in.CategoryCode != nil {
		in, out := &in.CategoryCode, &out.CategoryCode
		*out = new(string)
		**out = **in
	}
	if in.CcEmailAddresses != nil {
		in, out := &in.CcEmailAddresses, &out.CcEmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CommunicationBody != nil {
		in, out := &in.CommunicationBody, &out.CommunicationBody
		*out = new(string)
		**out = **in
	}
	if in.DisplayID != nil {
		in, out := &in.DisplayID, &out.DisplayID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IssueType != nil {
		in, out := &in.IssueType, &out.IssueType
		*out = new(string)
		**out = **in
	}
	if in.Language != nil {
		in, out := &in.Language, &out.Language
		*out = new(string)
		**out = **in
	}
	if in.ServiceCode != nil {
		in, out := &in.ServiceCode, &out.ServiceCode
		*out = new(string)
		**out = **in
	}
	if in.SeverityCode != nil {
		in, out := &in.SeverityCode, &out.SeverityCode
		*out = new(string)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SupportCaseObservation.
func (in *SupportCaseObservation) DeepCopy() *SupportCaseObservation {
	if in == nil {
		return nil
	}
	out := new(SupportCaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SupportCaseParameters) DeepCopyInto(out *SupportCaseParameters) {
	*out = *in
	if in.CategoryCode != nil {
		in, out := &in.CategoryCode, &out.CategoryCode
		*out = new(string)
		**out = **in
	}
	if in.CcEmailAddresses != nil {
		in, out := &in.CcEmailAddresses, &out.CcEmailAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CommunicationBody != nil {
		in, out := &in.CommunicationBody, &out.CommunicationBody
		*out = new(string)
		**out = **in
	}
	if in.IssueType != nil {
		in, out := &in.IssueType, &out.IssueType
		*out = new(string)
		**out = **in
	}
	if in.Language != nil {
		in, out := &in.Language, &out.Language
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceCode != nil {
		in, out := &in.ServiceCode, &out.ServiceCode
		*out = new(string)
		**out = **in
	}
	if in.SeverityCode != nil {
		in, out := &in.SeverityCode, &out.SeverityCode
		*out = new(string)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SupportCaseParameters.
func (in *SupportCaseParameters) DeepCopy() *SupportCaseParameters {
	if in == nil {
		return nil
	}
	out := new(SupportCaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SupportCaseSpec) DeepCopyInto(out *SupportCaseSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SupportCaseSpec.
func (in *SupportCaseSpec) DeepCopy() *SupportCaseSpec {
	if in == nil {
		return nil
	}
	out := new(SupportCaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SupportCaseStatus) DeepCopyInto(out *SupportCaseStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SupportCaseStatus.
func (in *SupportCaseStatus) DeepCopy() *SupportCaseStatus {
	if in == nil {
		return nil
	}
	out := new(SupportCaseStatus)
	in.DeepCopyInto(out)
	return out
}
